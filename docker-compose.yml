version: "3"
services:
  web:
    image: nginx
    links:
     - php
     - database
    volumes:
      - ./docker/server.conf:/etc/nginx/nginx.conf:ro
      - ./docker/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www/html:cached
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
  php:
    build: ./docker/php-fpm-composer
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/html:cached
#    user: '${USER_ID}:${GROUP_ID}'

  database:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=drupal
      - POSTGRES_PASSWORD=drupal
      - POSTGRES_DB=drupal
      - PGDATA=/var/lib/postgresql/data/pgdata

    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d


  crond:
    image: wodby/drupal-php:7.3-dev-4.21.4
  #  container_name: "${PROJECT_NAME}_crond"
    environment:
      CRONTAB: "0 * * * * drush -r /var/www/html/web cron"
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0
#    user: '${USER_ID}:${GROUP_ID}'
    volumes:
      - ./:/var/www/html
  mailhog:
    image: mailhog/mailhog
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"
    build:
      ./docker/mail
  traefik:
    image: traefik:v2.0
    command: --api.insecure=true --providers.docker
    ports:
      - '8000:80'
    #    - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  node:
    build:
      context: ./docker/node
      cache_from:
        - 'node:14'
    image: 'node:14'
    working_dir: /var/www/html/web/themes/custom/web_ui
    labels:
    - "traefik.http.services.${PROJECT_NAME}_node.loadbalancer.server.port=3000"
    - "traefik.http.routers.${PROJECT_NAME}_node.rule=Host(`node.${PROJECT_BASE_URL}`)"
    expose:
    - "3000"
    command: sh -c 'npm install && npm run start'
    init: true
    restart: 'always'
    volumes:
      - ./:/var/www/html:cached
      - 'node-cache:/home/node/.cache'
      - 'node-npm-packages:/home/node/.npm-packages'

volumes:
  pgdata:
  php-composer-cache: null
  php-composer-vendor: null
  node-cache: null
  node-npm-packages: null

